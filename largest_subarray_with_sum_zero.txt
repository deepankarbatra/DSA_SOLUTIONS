Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0.

Example 1:

Input:
N = 8
A[] = {15,-2,2,-8,1,7,10,23}
Output: 5
Explanation: The largest subarray with
sum 0 will be -2 2 -8 1 7.




solution: 

class GfG
{
    int maxLen(int arr[], int n)
    {
       int maxi = 0;
       int sum = 0;
       HashMap<Integer, Integer> map = new HashMap<>();
       for(int i = 0; i < arr.length; i++) {
           sum += arr[i];
           if(sum == 0) {
               maxi = i + 1;
           } else {
               if(map.get(sum) != null) {
                   maxi = Math.max(maxi, i - map.get(sum));
               } else {
                   map.put(sum, i);
               }
           }
       }
       return maxi;
    }
}